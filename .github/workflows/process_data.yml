name: Process Reddit Movie Suggestions

on:
  schedule:
    - cron: '0 4 * * *' # Runs every day at 4 AM UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-process:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Cache IMDb Data
        id: cache-imdb
        uses: actions/cache@v3
        with:
          path: |
            ./data/title.basics.tsv.gz
            ./data/title.ratings.tsv.gz
          key: ${{ runner.os }}-imdb-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-imdb-

      - name: Download IMDb Datasets if not cached
        if: steps.cache-imdb.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./data
          wget -q -O ./data/title.basics.tsv.gz https://datasets.imdbws.com/title.basics.tsv.gz
          wget -q -O ./data/title.ratings.tsv.gz https://datasets.imdbws.com/title.ratings.tsv.gz

      - name: Build Local IMDb Database
        run: python src/build_imdb_db.py

      - name: Process Reddit Data and Generate Recommendations
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
        run: python src/process_reddit.py

      - name: Commit updated database
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions-bot@github.com'
          git add recommendations.db
          git commit -m "Update recommendations database" || echo "No changes to commit"
          git push
